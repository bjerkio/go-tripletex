// Code generated by go-swagger; DO NOT EDIT.

package time_clock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new time clock API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for time clock API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	TimesheetTimeClockGet(params *TimesheetTimeClockGetParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockGetOK, error)

	TimesheetTimeClockPresentGetPresent(params *TimesheetTimeClockPresentGetPresentParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockPresentGetPresentOK, error)

	TimesheetTimeClockPut(params *TimesheetTimeClockPutParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockPutOK, error)

	TimesheetTimeClockSearch(params *TimesheetTimeClockSearchParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockSearchOK, error)

	TimesheetTimeClockStartStart(params *TimesheetTimeClockStartStartParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockStartStartOK, error)

	TimesheetTimeClockStopStop(params *TimesheetTimeClockStopStopParams, authInfo runtime.ClientAuthInfoWriter) error

	SetTransport(transport runtime.ClientTransport)
}

/*
  TimesheetTimeClockGet finds time clock entry by ID
*/
func (a *Client) TimesheetTimeClockGet(params *TimesheetTimeClockGetParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockGet",
		Method:             "GET",
		PathPattern:        "/timesheet/timeClock/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimesheetTimeClockGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimesheetTimeClockGet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimesheetTimeClockPresentGetPresent finds a user s present running time clock
*/
func (a *Client) TimesheetTimeClockPresentGetPresent(params *TimesheetTimeClockPresentGetPresentParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockPresentGetPresentOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockPresentGetPresentParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockPresentGetPresent",
		Method:             "GET",
		PathPattern:        "/timesheet/timeClock/present",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockPresentGetPresentReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimesheetTimeClockPresentGetPresentOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimesheetTimeClockPresentGetPresent: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimesheetTimeClockPut updates time clock by ID
*/
func (a *Client) TimesheetTimeClockPut(params *TimesheetTimeClockPutParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockPutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockPutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockPut",
		Method:             "PUT",
		PathPattern:        "/timesheet/timeClock/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json; charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockPutReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimesheetTimeClockPutOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimesheetTimeClockPut: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimesheetTimeClockSearch finds time clock entries corresponding with sent data
*/
func (a *Client) TimesheetTimeClockSearch(params *TimesheetTimeClockSearchParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockSearchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockSearch",
		Method:             "GET",
		PathPattern:        "/timesheet/timeClock",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimesheetTimeClockSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimesheetTimeClockSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimesheetTimeClockStartStart starts time clock
*/
func (a *Client) TimesheetTimeClockStartStart(params *TimesheetTimeClockStartStartParams, authInfo runtime.ClientAuthInfoWriter) (*TimesheetTimeClockStartStartOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockStartStartParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockStartStart",
		Method:             "PUT",
		PathPattern:        "/timesheet/timeClock/:start",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockStartStartReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TimesheetTimeClockStartStartOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for TimesheetTimeClockStartStart: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TimesheetTimeClockStopStop stops time clock
*/
func (a *Client) TimesheetTimeClockStopStop(params *TimesheetTimeClockStopStopParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTimesheetTimeClockStopStopParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "TimesheetTimeClockStopStop",
		Method:             "PUT",
		PathPattern:        "/timesheet/timeClock/{id}/:stop",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TimesheetTimeClockStopStopReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
