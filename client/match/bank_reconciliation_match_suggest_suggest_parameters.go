// Code generated by go-swagger; DO NOT EDIT.

package match

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewBankReconciliationMatchSuggestSuggestParams creates a new BankReconciliationMatchSuggestSuggestParams object
// with the default values initialized.
func NewBankReconciliationMatchSuggestSuggestParams() *BankReconciliationMatchSuggestSuggestParams {
	var ()
	return &BankReconciliationMatchSuggestSuggestParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBankReconciliationMatchSuggestSuggestParamsWithTimeout creates a new BankReconciliationMatchSuggestSuggestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBankReconciliationMatchSuggestSuggestParamsWithTimeout(timeout time.Duration) *BankReconciliationMatchSuggestSuggestParams {
	var ()
	return &BankReconciliationMatchSuggestSuggestParams{

		timeout: timeout,
	}
}

// NewBankReconciliationMatchSuggestSuggestParamsWithContext creates a new BankReconciliationMatchSuggestSuggestParams object
// with the default values initialized, and the ability to set a context for a request
func NewBankReconciliationMatchSuggestSuggestParamsWithContext(ctx context.Context) *BankReconciliationMatchSuggestSuggestParams {
	var ()
	return &BankReconciliationMatchSuggestSuggestParams{

		Context: ctx,
	}
}

// NewBankReconciliationMatchSuggestSuggestParamsWithHTTPClient creates a new BankReconciliationMatchSuggestSuggestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBankReconciliationMatchSuggestSuggestParamsWithHTTPClient(client *http.Client) *BankReconciliationMatchSuggestSuggestParams {
	var ()
	return &BankReconciliationMatchSuggestSuggestParams{
		HTTPClient: client,
	}
}

/*BankReconciliationMatchSuggestSuggestParams contains all the parameters to send to the API endpoint
for the bank reconciliation match suggest suggest operation typically these are written to a http.Request
*/
type BankReconciliationMatchSuggestSuggestParams struct {

	/*BankReconciliationID
	  Element ID

	*/
	BankReconciliationID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) WithTimeout(timeout time.Duration) *BankReconciliationMatchSuggestSuggestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) WithContext(ctx context.Context) *BankReconciliationMatchSuggestSuggestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) WithHTTPClient(client *http.Client) *BankReconciliationMatchSuggestSuggestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBankReconciliationID adds the bankReconciliationID to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) WithBankReconciliationID(bankReconciliationID int32) *BankReconciliationMatchSuggestSuggestParams {
	o.SetBankReconciliationID(bankReconciliationID)
	return o
}

// SetBankReconciliationID adds the bankReconciliationId to the bank reconciliation match suggest suggest params
func (o *BankReconciliationMatchSuggestSuggestParams) SetBankReconciliationID(bankReconciliationID int32) {
	o.BankReconciliationID = bankReconciliationID
}

// WriteToRequest writes these params to a swagger request
func (o *BankReconciliationMatchSuggestSuggestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param bankReconciliationId
	qrBankReconciliationID := o.BankReconciliationID
	qBankReconciliationID := swag.FormatInt32(qrBankReconciliationID)
	if qBankReconciliationID != "" {
		if err := r.SetQueryParam("bankReconciliationId", qBankReconciliationID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
