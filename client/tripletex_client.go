// Copyright 2020 Bjerk AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/tripletex-go/client/accommodation_allowance"
	"github.com/bjerkio/tripletex-go/client/account"
	"github.com/bjerkio/tripletex-go/client/accounting_period"
	"github.com/bjerkio/tripletex-go/client/activity"
	"github.com/bjerkio/tripletex-go/client/altinn"
	"github.com/bjerkio/tripletex-go/client/annual_account"
	"github.com/bjerkio/tripletex-go/client/bank"
	"github.com/bjerkio/tripletex-go/client/category"
	"github.com/bjerkio/tripletex-go/client/close_group"
	"github.com/bjerkio/tripletex-go/client/company"
	"github.com/bjerkio/tripletex-go/client/compilation"
	"github.com/bjerkio/tripletex-go/client/consumer"
	"github.com/bjerkio/tripletex-go/client/contact"
	"github.com/bjerkio/tripletex-go/client/control_form"
	"github.com/bjerkio/tripletex-go/client/cost"
	"github.com/bjerkio/tripletex-go/client/cost_category"
	"github.com/bjerkio/tripletex-go/client/country"
	"github.com/bjerkio/tripletex-go/client/currency"
	"github.com/bjerkio/tripletex-go/client/customer"
	"github.com/bjerkio/tripletex-go/client/delivery_address"
	"github.com/bjerkio/tripletex-go/client/department"
	"github.com/bjerkio/tripletex-go/client/details"
	"github.com/bjerkio/tripletex-go/client/deviation"
	"github.com/bjerkio/tripletex-go/client/division"
	"github.com/bjerkio/tripletex-go/client/document"
	"github.com/bjerkio/tripletex-go/client/document_archive"
	"github.com/bjerkio/tripletex-go/client/employee"
	"github.com/bjerkio/tripletex-go/client/employment"
	"github.com/bjerkio/tripletex-go/client/employment_type"
	"github.com/bjerkio/tripletex-go/client/entitlement"
	"github.com/bjerkio/tripletex-go/client/entry"
	"github.com/bjerkio/tripletex-go/client/event"
	"github.com/bjerkio/tripletex-go/client/external"
	"github.com/bjerkio/tripletex-go/client/goods_receipt"
	"github.com/bjerkio/tripletex-go/client/goods_receipt_line"
	"github.com/bjerkio/tripletex-go/client/group"
	"github.com/bjerkio/tripletex-go/client/group_relation"
	"github.com/bjerkio/tripletex-go/client/holiday"
	"github.com/bjerkio/tripletex-go/client/hourly_cost_and_rate"
	"github.com/bjerkio/tripletex-go/client/hourly_rates"
	"github.com/bjerkio/tripletex-go/client/inventories"
	"github.com/bjerkio/tripletex-go/client/inventory"
	"github.com/bjerkio/tripletex-go/client/invoice"
	"github.com/bjerkio/tripletex-go/client/leave_of_absence"
	"github.com/bjerkio/tripletex-go/client/leave_of_absence_type"
	"github.com/bjerkio/tripletex-go/client/ledger"
	"github.com/bjerkio/tripletex-go/client/match"
	"github.com/bjerkio/tripletex-go/client/mileage_allowance"
	"github.com/bjerkio/tripletex-go/client/month"
	"github.com/bjerkio/tripletex-go/client/municipality"
	"github.com/bjerkio/tripletex-go/client/next_of_kin"
	"github.com/bjerkio/tripletex-go/client/occupation_code"
	"github.com/bjerkio/tripletex-go/client/order"
	"github.com/bjerkio/tripletex-go/client/orderline"
	"github.com/bjerkio/tripletex-go/client/participant"
	"github.com/bjerkio/tripletex-go/client/passenger"
	"github.com/bjerkio/tripletex-go/client/payment_type"
	"github.com/bjerkio/tripletex-go/client/payment_type_out"
	"github.com/bjerkio/tripletex-go/client/payslip"
	"github.com/bjerkio/tripletex-go/client/per_diem_compensation"
	"github.com/bjerkio/tripletex-go/client/period"
	"github.com/bjerkio/tripletex-go/client/posting"
	"github.com/bjerkio/tripletex-go/client/product"
	"github.com/bjerkio/tripletex-go/client/productline"
	"github.com/bjerkio/tripletex-go/client/project"
	"github.com/bjerkio/tripletex-go/client/project_activity"
	"github.com/bjerkio/tripletex-go/client/project_specific_rates"
	"github.com/bjerkio/tripletex-go/client/prospect"
	"github.com/bjerkio/tripletex-go/client/purchase_order"
	"github.com/bjerkio/tripletex-go/client/rate"
	"github.com/bjerkio/tripletex-go/client/rate_category"
	"github.com/bjerkio/tripletex-go/client/rate_category_group"
	"github.com/bjerkio/tripletex-go/client/reconciliation"
	"github.com/bjerkio/tripletex-go/client/reminder"
	"github.com/bjerkio/tripletex-go/client/remuneration_type"
	"github.com/bjerkio/tripletex-go/client/salary_type_specification"
	"github.com/bjerkio/tripletex-go/client/salesmodules"
	"github.com/bjerkio/tripletex-go/client/session"
	"github.com/bjerkio/tripletex-go/client/settings"
	"github.com/bjerkio/tripletex-go/client/standard_time"
	"github.com/bjerkio/tripletex-go/client/statement"
	"github.com/bjerkio/tripletex-go/client/stocktaking"
	"github.com/bjerkio/tripletex-go/client/subscription"
	"github.com/bjerkio/tripletex-go/client/supplier"
	"github.com/bjerkio/tripletex-go/client/supplier_invoice"
	"github.com/bjerkio/tripletex-go/client/task"
	"github.com/bjerkio/tripletex-go/client/time_clock"
	"github.com/bjerkio/tripletex-go/client/transaction"
	"github.com/bjerkio/tripletex-go/client/travel_expense"
	"github.com/bjerkio/tripletex-go/client/travel_expensezone"
	"github.com/bjerkio/tripletex-go/client/type_operations"
	"github.com/bjerkio/tripletex-go/client/unit"
	"github.com/bjerkio/tripletex-go/client/vat_type"
	"github.com/bjerkio/tripletex-go/client/voucher"
	"github.com/bjerkio/tripletex-go/client/voucher_type"
	"github.com/bjerkio/tripletex-go/client/week"
	"github.com/bjerkio/tripletex-go/client/working_hours_scheme"
)

// Default tripletex HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "tripletex.no"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/v2"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new tripletex HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Tripletex {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new tripletex HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Tripletex {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new tripletex client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Tripletex {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Tripletex)
	cli.Transport = transport
	cli.AccommodationAllowance = accommodation_allowance.New(transport, formats)
	cli.Account = account.New(transport, formats)
	cli.AccountingPeriod = accounting_period.New(transport, formats)
	cli.Activity = activity.New(transport, formats)
	cli.Altinn = altinn.New(transport, formats)
	cli.AnnualAccount = annual_account.New(transport, formats)
	cli.Bank = bank.New(transport, formats)
	cli.Category = category.New(transport, formats)
	cli.CloseGroup = close_group.New(transport, formats)
	cli.Company = company.New(transport, formats)
	cli.Compilation = compilation.New(transport, formats)
	cli.Consumer = consumer.New(transport, formats)
	cli.Contact = contact.New(transport, formats)
	cli.ControlForm = control_form.New(transport, formats)
	cli.Cost = cost.New(transport, formats)
	cli.CostCategory = cost_category.New(transport, formats)
	cli.Country = country.New(transport, formats)
	cli.Currency = currency.New(transport, formats)
	cli.Customer = customer.New(transport, formats)
	cli.DeliveryAddress = delivery_address.New(transport, formats)
	cli.Department = department.New(transport, formats)
	cli.Details = details.New(transport, formats)
	cli.Deviation = deviation.New(transport, formats)
	cli.Division = division.New(transport, formats)
	cli.Document = document.New(transport, formats)
	cli.DocumentArchive = document_archive.New(transport, formats)
	cli.Employee = employee.New(transport, formats)
	cli.Employment = employment.New(transport, formats)
	cli.EmploymentType = employment_type.New(transport, formats)
	cli.Entitlement = entitlement.New(transport, formats)
	cli.Entry = entry.New(transport, formats)
	cli.Event = event.New(transport, formats)
	cli.External = external.New(transport, formats)
	cli.GoodsReceipt = goods_receipt.New(transport, formats)
	cli.GoodsReceiptLine = goods_receipt_line.New(transport, formats)
	cli.Group = group.New(transport, formats)
	cli.GroupRelation = group_relation.New(transport, formats)
	cli.Holiday = holiday.New(transport, formats)
	cli.HourlyCostAndRate = hourly_cost_and_rate.New(transport, formats)
	cli.HourlyRates = hourly_rates.New(transport, formats)
	cli.Inventories = inventories.New(transport, formats)
	cli.Inventory = inventory.New(transport, formats)
	cli.Invoice = invoice.New(transport, formats)
	cli.LeaveOfAbsence = leave_of_absence.New(transport, formats)
	cli.LeaveOfAbsenceType = leave_of_absence_type.New(transport, formats)
	cli.Ledger = ledger.New(transport, formats)
	cli.Match = match.New(transport, formats)
	cli.MileageAllowance = mileage_allowance.New(transport, formats)
	cli.Month = month.New(transport, formats)
	cli.Municipality = municipality.New(transport, formats)
	cli.NextOfKin = next_of_kin.New(transport, formats)
	cli.OccupationCode = occupation_code.New(transport, formats)
	cli.Order = order.New(transport, formats)
	cli.Orderline = orderline.New(transport, formats)
	cli.Participant = participant.New(transport, formats)
	cli.Passenger = passenger.New(transport, formats)
	cli.PaymentType = payment_type.New(transport, formats)
	cli.PaymentTypeOut = payment_type_out.New(transport, formats)
	cli.Payslip = payslip.New(transport, formats)
	cli.PerDiemCompensation = per_diem_compensation.New(transport, formats)
	cli.Period = period.New(transport, formats)
	cli.Posting = posting.New(transport, formats)
	cli.Product = product.New(transport, formats)
	cli.Productline = productline.New(transport, formats)
	cli.Project = project.New(transport, formats)
	cli.ProjectActivity = project_activity.New(transport, formats)
	cli.ProjectSpecificRates = project_specific_rates.New(transport, formats)
	cli.Prospect = prospect.New(transport, formats)
	cli.PurchaseOrder = purchase_order.New(transport, formats)
	cli.Rate = rate.New(transport, formats)
	cli.RateCategory = rate_category.New(transport, formats)
	cli.RateCategoryGroup = rate_category_group.New(transport, formats)
	cli.Reconciliation = reconciliation.New(transport, formats)
	cli.Reminder = reminder.New(transport, formats)
	cli.RemunerationType = remuneration_type.New(transport, formats)
	cli.SalaryTypeSpecification = salary_type_specification.New(transport, formats)
	cli.Salesmodules = salesmodules.New(transport, formats)
	cli.Session = session.New(transport, formats)
	cli.Settings = settings.New(transport, formats)
	cli.StandardTime = standard_time.New(transport, formats)
	cli.Statement = statement.New(transport, formats)
	cli.Stocktaking = stocktaking.New(transport, formats)
	cli.Subscription = subscription.New(transport, formats)
	cli.Supplier = supplier.New(transport, formats)
	cli.SupplierInvoice = supplier_invoice.New(transport, formats)
	cli.Task = task.New(transport, formats)
	cli.TimeClock = time_clock.New(transport, formats)
	cli.Transaction = transaction.New(transport, formats)
	cli.TravelExpense = travel_expense.New(transport, formats)
	cli.TravelExpensezone = travel_expensezone.New(transport, formats)
	cli.TypeOperations = type_operations.New(transport, formats)
	cli.Unit = unit.New(transport, formats)
	cli.VatType = vat_type.New(transport, formats)
	cli.Voucher = voucher.New(transport, formats)
	cli.VoucherType = voucher_type.New(transport, formats)
	cli.Week = week.New(transport, formats)
	cli.WorkingHoursScheme = working_hours_scheme.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Tripletex is a client for tripletex
type Tripletex struct {
	AccommodationAllowance accommodation_allowance.ClientService

	Account account.ClientService

	AccountingPeriod accounting_period.ClientService

	Activity activity.ClientService

	Altinn altinn.ClientService

	AnnualAccount annual_account.ClientService

	Bank bank.ClientService

	Category category.ClientService

	CloseGroup close_group.ClientService

	Company company.ClientService

	Compilation compilation.ClientService

	Consumer consumer.ClientService

	Contact contact.ClientService

	ControlForm control_form.ClientService

	Cost cost.ClientService

	CostCategory cost_category.ClientService

	Country country.ClientService

	Currency currency.ClientService

	Customer customer.ClientService

	DeliveryAddress delivery_address.ClientService

	Department department.ClientService

	Details details.ClientService

	Deviation deviation.ClientService

	Division division.ClientService

	Document document.ClientService

	DocumentArchive document_archive.ClientService

	Employee employee.ClientService

	Employment employment.ClientService

	EmploymentType employment_type.ClientService

	Entitlement entitlement.ClientService

	Entry entry.ClientService

	Event event.ClientService

	External external.ClientService

	GoodsReceipt goods_receipt.ClientService

	GoodsReceiptLine goods_receipt_line.ClientService

	Group group.ClientService

	GroupRelation group_relation.ClientService

	Holiday holiday.ClientService

	HourlyCostAndRate hourly_cost_and_rate.ClientService

	HourlyRates hourly_rates.ClientService

	Inventories inventories.ClientService

	Inventory inventory.ClientService

	Invoice invoice.ClientService

	LeaveOfAbsence leave_of_absence.ClientService

	LeaveOfAbsenceType leave_of_absence_type.ClientService

	Ledger ledger.ClientService

	Match match.ClientService

	MileageAllowance mileage_allowance.ClientService

	Month month.ClientService

	Municipality municipality.ClientService

	NextOfKin next_of_kin.ClientService

	OccupationCode occupation_code.ClientService

	Order order.ClientService

	Orderline orderline.ClientService

	Participant participant.ClientService

	Passenger passenger.ClientService

	PaymentType payment_type.ClientService

	PaymentTypeOut payment_type_out.ClientService

	Payslip payslip.ClientService

	PerDiemCompensation per_diem_compensation.ClientService

	Period period.ClientService

	Posting posting.ClientService

	Product product.ClientService

	Productline productline.ClientService

	Project project.ClientService

	ProjectActivity project_activity.ClientService

	ProjectSpecificRates project_specific_rates.ClientService

	Prospect prospect.ClientService

	PurchaseOrder purchase_order.ClientService

	Rate rate.ClientService

	RateCategory rate_category.ClientService

	RateCategoryGroup rate_category_group.ClientService

	Reconciliation reconciliation.ClientService

	Reminder reminder.ClientService

	RemunerationType remuneration_type.ClientService

	SalaryTypeSpecification salary_type_specification.ClientService

	Salesmodules salesmodules.ClientService

	Session session.ClientService

	Settings settings.ClientService

	StandardTime standard_time.ClientService

	Statement statement.ClientService

	Stocktaking stocktaking.ClientService

	Subscription subscription.ClientService

	Supplier supplier.ClientService

	SupplierInvoice supplier_invoice.ClientService

	Task task.ClientService

	TimeClock time_clock.ClientService

	Transaction transaction.ClientService

	TravelExpense travel_expense.ClientService

	TravelExpensezone travel_expensezone.ClientService

	TypeOperations type_operations.ClientService

	Unit unit.ClientService

	VatType vat_type.ClientService

	Voucher voucher.ClientService

	VoucherType voucher_type.ClientService

	Week week.ClientService

	WorkingHoursScheme working_hours_scheme.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Tripletex) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AccommodationAllowance.SetTransport(transport)
	c.Account.SetTransport(transport)
	c.AccountingPeriod.SetTransport(transport)
	c.Activity.SetTransport(transport)
	c.Altinn.SetTransport(transport)
	c.AnnualAccount.SetTransport(transport)
	c.Bank.SetTransport(transport)
	c.Category.SetTransport(transport)
	c.CloseGroup.SetTransport(transport)
	c.Company.SetTransport(transport)
	c.Compilation.SetTransport(transport)
	c.Consumer.SetTransport(transport)
	c.Contact.SetTransport(transport)
	c.ControlForm.SetTransport(transport)
	c.Cost.SetTransport(transport)
	c.CostCategory.SetTransport(transport)
	c.Country.SetTransport(transport)
	c.Currency.SetTransport(transport)
	c.Customer.SetTransport(transport)
	c.DeliveryAddress.SetTransport(transport)
	c.Department.SetTransport(transport)
	c.Details.SetTransport(transport)
	c.Deviation.SetTransport(transport)
	c.Division.SetTransport(transport)
	c.Document.SetTransport(transport)
	c.DocumentArchive.SetTransport(transport)
	c.Employee.SetTransport(transport)
	c.Employment.SetTransport(transport)
	c.EmploymentType.SetTransport(transport)
	c.Entitlement.SetTransport(transport)
	c.Entry.SetTransport(transport)
	c.Event.SetTransport(transport)
	c.External.SetTransport(transport)
	c.GoodsReceipt.SetTransport(transport)
	c.GoodsReceiptLine.SetTransport(transport)
	c.Group.SetTransport(transport)
	c.GroupRelation.SetTransport(transport)
	c.Holiday.SetTransport(transport)
	c.HourlyCostAndRate.SetTransport(transport)
	c.HourlyRates.SetTransport(transport)
	c.Inventories.SetTransport(transport)
	c.Inventory.SetTransport(transport)
	c.Invoice.SetTransport(transport)
	c.LeaveOfAbsence.SetTransport(transport)
	c.LeaveOfAbsenceType.SetTransport(transport)
	c.Ledger.SetTransport(transport)
	c.Match.SetTransport(transport)
	c.MileageAllowance.SetTransport(transport)
	c.Month.SetTransport(transport)
	c.Municipality.SetTransport(transport)
	c.NextOfKin.SetTransport(transport)
	c.OccupationCode.SetTransport(transport)
	c.Order.SetTransport(transport)
	c.Orderline.SetTransport(transport)
	c.Participant.SetTransport(transport)
	c.Passenger.SetTransport(transport)
	c.PaymentType.SetTransport(transport)
	c.PaymentTypeOut.SetTransport(transport)
	c.Payslip.SetTransport(transport)
	c.PerDiemCompensation.SetTransport(transport)
	c.Period.SetTransport(transport)
	c.Posting.SetTransport(transport)
	c.Product.SetTransport(transport)
	c.Productline.SetTransport(transport)
	c.Project.SetTransport(transport)
	c.ProjectActivity.SetTransport(transport)
	c.ProjectSpecificRates.SetTransport(transport)
	c.Prospect.SetTransport(transport)
	c.PurchaseOrder.SetTransport(transport)
	c.Rate.SetTransport(transport)
	c.RateCategory.SetTransport(transport)
	c.RateCategoryGroup.SetTransport(transport)
	c.Reconciliation.SetTransport(transport)
	c.Reminder.SetTransport(transport)
	c.RemunerationType.SetTransport(transport)
	c.SalaryTypeSpecification.SetTransport(transport)
	c.Salesmodules.SetTransport(transport)
	c.Session.SetTransport(transport)
	c.Settings.SetTransport(transport)
	c.StandardTime.SetTransport(transport)
	c.Statement.SetTransport(transport)
	c.Stocktaking.SetTransport(transport)
	c.Subscription.SetTransport(transport)
	c.Supplier.SetTransport(transport)
	c.SupplierInvoice.SetTransport(transport)
	c.Task.SetTransport(transport)
	c.TimeClock.SetTransport(transport)
	c.Transaction.SetTransport(transport)
	c.TravelExpense.SetTransport(transport)
	c.TravelExpensezone.SetTransport(transport)
	c.TypeOperations.SetTransport(transport)
	c.Unit.SetTransport(transport)
	c.VatType.SetTransport(transport)
	c.Voucher.SetTransport(transport)
	c.VoucherType.SetTransport(transport)
	c.Week.SetTransport(transport)
	c.WorkingHoursScheme.SetTransport(transport)
}
