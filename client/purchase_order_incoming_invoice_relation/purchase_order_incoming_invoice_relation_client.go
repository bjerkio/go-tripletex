// Code generated by go-swagger; DO NOT EDIT.

package purchase_order_incoming_invoice_relation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new purchase order incoming invoice relation API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for purchase order incoming invoice relation API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIds(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIdsParams, authInfo runtime.ClientAuthInfoWriter) error

	PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostList(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListCreated, error)

	PurchaseOrderPurchaseOrderIncomingInvoiceRelationDelete(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationDeleteParams, authInfo runtime.ClientAuthInfoWriter) error

	PurchaseOrderPurchaseOrderIncomingInvoiceRelationGet(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetOK, error)

	PurchaseOrderPurchaseOrderIncomingInvoiceRelationPost(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostCreated, error)

	PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearch(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIds bs e t a delete multiple purchase order voucher relations only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIds(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIdsParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIdsParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelationList_deleteByIds",
		Method:             "DELETE",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/list",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationListDeleteByIdsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostList bs e t a create a new list of relations between purchase order and voucher only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostList(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelationList_postList",
		Method:             "POST",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/list",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json; charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PurchaseOrderPurchaseOrderIncomingInvoiceRelationListPostListCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PurchaseOrderPurchaseOrderIncomingInvoiceRelationList_postList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationDelete bs e t a delete purchase order voucher relation only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationDelete(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationDeleteParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationDeleteParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_delete",
		Method:             "DELETE",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationGet bs e t a find purchase order relation to voucher by ID only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationGet(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_get",
		Method:             "GET",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PurchaseOrderPurchaseOrderIncomingInvoiceRelationGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PurchaseOrderPurchaseOrderIncomingInvoiceRelation_get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationPost bs e t a create new relation between purchase order and a voucher only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationPost(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationPostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_post",
		Method:             "POST",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json; charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PurchaseOrderPurchaseOrderIncomingInvoiceRelationPostCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PurchaseOrderPurchaseOrderIncomingInvoiceRelation_post: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearch bs e t a find purchase order relation to voucher with sent data only available for users that have activated the logistics plus beta program in our customer account
*/
func (a *Client) PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearch(params *PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchParams, authInfo runtime.ClientAuthInfoWriter) (*PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_search",
		Method:             "GET",
		PathPattern:        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PurchaseOrderPurchaseOrderIncomingInvoiceRelationSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PurchaseOrderPurchaseOrderIncomingInvoiceRelation_search: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
