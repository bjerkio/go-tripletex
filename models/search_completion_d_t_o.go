// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SearchCompletionDTO search completion d t o
//
// swagger:model SearchCompletionDTO
type SearchCompletionDTO struct {

	// address
	Address string `json:"address,omitempty"`

	// alternate name
	AlternateName string `json:"alternateName,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// latitude
	Latitude float64 `json:"latitude,omitempty"`

	// longitude
	Longitude float64 `json:"longitude,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// postal area
	PostalArea string `json:"postalArea,omitempty"`

	// postal code
	PostalCode string `json:"postalCode,omitempty"`

	// score
	Score int32 `json:"score,omitempty"`

	// sources
	Sources []string `json:"sources"`
}

// Validate validates this search completion d t o
func (m *SearchCompletionDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var searchCompletionDTOSourcesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SEARCH1881","TRIPLETEX","NICKNAME","EMPLOYEE","CONTACT","ACTIVITY","PROJECT","ORDER","OFFER","CUSTOMER","COMPANY","CONTROLSCHEMA","HOUR","TRAVELEXPENSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		searchCompletionDTOSourcesItemsEnum = append(searchCompletionDTOSourcesItemsEnum, v)
	}
}

func (m *SearchCompletionDTO) validateSourcesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, searchCompletionDTOSourcesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SearchCompletionDTO) validateSources(formats strfmt.Registry) error {

	if swag.IsZero(m.Sources) { // not required
		return nil
	}

	for i := 0; i < len(m.Sources); i++ {

		// value enum
		if err := m.validateSourcesItemsEnum("sources"+"."+strconv.Itoa(i), "body", m.Sources[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SearchCompletionDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchCompletionDTO) UnmarshalBinary(b []byte) error {
	var res SearchCompletionDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
