// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LoggedInUserInfoDTO logged in user info d t o
//
// swagger:model LoggedInUserInfoDTO
type LoggedInUserInfoDTO struct {

	// company
	Company *Company `json:"company,omitempty"`

	// company Id
	CompanyID int32 `json:"companyId,omitempty"`

	// employee
	Employee *Employee `json:"employee,omitempty"`

	// employee Id
	EmployeeID int32 `json:"employeeId,omitempty"`

	// language
	Language string `json:"language,omitempty"`
}

// Validate validates this logged in user info d t o
func (m *LoggedInUserInfoDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmployee(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LoggedInUserInfoDTO) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(m.Company) { // not required
		return nil
	}

	if m.Company != nil {
		if err := m.Company.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("company")
			}
			return err
		}
	}

	return nil
}

func (m *LoggedInUserInfoDTO) validateEmployee(formats strfmt.Registry) error {

	if swag.IsZero(m.Employee) { // not required
		return nil
	}

	if m.Employee != nil {
		if err := m.Employee.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("employee")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LoggedInUserInfoDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LoggedInUserInfoDTO) UnmarshalBinary(b []byte) error {
	var res LoggedInUserInfoDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
