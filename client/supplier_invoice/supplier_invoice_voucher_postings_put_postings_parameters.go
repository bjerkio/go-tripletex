// Code generated by go-swagger; DO NOT EDIT.

package supplier_invoice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/bjerkio/tripletex-go/v2/models"
)

// NewSupplierInvoiceVoucherPostingsPutPostingsParams creates a new SupplierInvoiceVoucherPostingsPutPostingsParams object
// with the default values initialized.
func NewSupplierInvoiceVoucherPostingsPutPostingsParams() *SupplierInvoiceVoucherPostingsPutPostingsParams {
	var (
		sendToLedgerDefault = bool(false)
	)
	return &SupplierInvoiceVoucherPostingsPutPostingsParams{
		SendToLedger: &sendToLedgerDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithTimeout creates a new SupplierInvoiceVoucherPostingsPutPostingsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithTimeout(timeout time.Duration) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	var (
		sendToLedgerDefault = bool(false)
	)
	return &SupplierInvoiceVoucherPostingsPutPostingsParams{
		SendToLedger: &sendToLedgerDefault,

		timeout: timeout,
	}
}

// NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithContext creates a new SupplierInvoiceVoucherPostingsPutPostingsParams object
// with the default values initialized, and the ability to set a context for a request
func NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithContext(ctx context.Context) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	var (
		sendToLedgerDefault = bool(false)
	)
	return &SupplierInvoiceVoucherPostingsPutPostingsParams{
		SendToLedger: &sendToLedgerDefault,

		Context: ctx,
	}
}

// NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithHTTPClient creates a new SupplierInvoiceVoucherPostingsPutPostingsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSupplierInvoiceVoucherPostingsPutPostingsParamsWithHTTPClient(client *http.Client) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	var (
		sendToLedgerDefault = bool(false)
	)
	return &SupplierInvoiceVoucherPostingsPutPostingsParams{
		SendToLedger: &sendToLedgerDefault,
		HTTPClient:   client,
	}
}

/*SupplierInvoiceVoucherPostingsPutPostingsParams contains all the parameters to send to the API endpoint
for the supplier invoice voucher postings put postings operation typically these are written to a http.Request
*/
type SupplierInvoiceVoucherPostingsPutPostingsParams struct {

	/*Body
	  Postings

	*/
	Body []*models.OrderLinePostingDTO
	/*ID
	  Voucher id

	*/
	ID int32
	/*SendToLedger
	  Equals

	*/
	SendToLedger *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithTimeout(timeout time.Duration) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithContext(ctx context.Context) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithHTTPClient(client *http.Client) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithBody(body []*models.OrderLinePostingDTO) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetBody(body []*models.OrderLinePostingDTO) {
	o.Body = body
}

// WithID adds the id to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithID(id int32) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetID(id int32) {
	o.ID = id
}

// WithSendToLedger adds the sendToLedger to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WithSendToLedger(sendToLedger *bool) *SupplierInvoiceVoucherPostingsPutPostingsParams {
	o.SetSendToLedger(sendToLedger)
	return o
}

// SetSendToLedger adds the sendToLedger to the supplier invoice voucher postings put postings params
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) SetSendToLedger(sendToLedger *bool) {
	o.SendToLedger = sendToLedger
}

// WriteToRequest writes these params to a swagger request
func (o *SupplierInvoiceVoucherPostingsPutPostingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if o.SendToLedger != nil {

		// query param sendToLedger
		var qrSendToLedger bool
		if o.SendToLedger != nil {
			qrSendToLedger = *o.SendToLedger
		}
		qSendToLedger := swag.FormatBool(qrSendToLedger)
		if qSendToLedger != "" {
			if err := r.SetQueryParam("sendToLedger", qSendToLedger); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
