// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BalanceSheetAccount balance sheet account
//
// swagger:model BalanceSheetAccount
type BalanceSheetAccount struct {

	// account
	// Read Only: true
	Account *Account `json:"account,omitempty"`

	// balance change
	// Read Only: true
	BalanceChange float64 `json:"balanceChange,omitempty"`

	// balance in
	// Read Only: true
	BalanceIn float64 `json:"balanceIn,omitempty"`

	// balance out
	// Read Only: true
	BalanceOut float64 `json:"balanceOut,omitempty"`

	// The end date for this period - exclusive.
	// Read Only: true
	EndDate string `json:"endDate,omitempty"`

	// The start date for this period - inclusive.
	// Read Only: true
	StartDate string `json:"startDate,omitempty"`
}

// Validate validates this balance sheet account
func (m *BalanceSheetAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BalanceSheetAccount) validateAccount(formats strfmt.Registry) error {

	if swag.IsZero(m.Account) { // not required
		return nil
	}

	if m.Account != nil {
		if err := m.Account.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("account")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BalanceSheetAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BalanceSheetAccount) UnmarshalBinary(b []byte) error {
	var res BalanceSheetAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
