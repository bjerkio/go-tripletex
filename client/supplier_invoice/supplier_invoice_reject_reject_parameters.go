// Code generated by go-swagger; DO NOT EDIT.

package supplier_invoice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSupplierInvoiceRejectRejectParams creates a new SupplierInvoiceRejectRejectParams object
// with the default values initialized.
func NewSupplierInvoiceRejectRejectParams() *SupplierInvoiceRejectRejectParams {
	var ()
	return &SupplierInvoiceRejectRejectParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSupplierInvoiceRejectRejectParamsWithTimeout creates a new SupplierInvoiceRejectRejectParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSupplierInvoiceRejectRejectParamsWithTimeout(timeout time.Duration) *SupplierInvoiceRejectRejectParams {
	var ()
	return &SupplierInvoiceRejectRejectParams{

		timeout: timeout,
	}
}

// NewSupplierInvoiceRejectRejectParamsWithContext creates a new SupplierInvoiceRejectRejectParams object
// with the default values initialized, and the ability to set a context for a request
func NewSupplierInvoiceRejectRejectParamsWithContext(ctx context.Context) *SupplierInvoiceRejectRejectParams {
	var ()
	return &SupplierInvoiceRejectRejectParams{

		Context: ctx,
	}
}

// NewSupplierInvoiceRejectRejectParamsWithHTTPClient creates a new SupplierInvoiceRejectRejectParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSupplierInvoiceRejectRejectParamsWithHTTPClient(client *http.Client) *SupplierInvoiceRejectRejectParams {
	var ()
	return &SupplierInvoiceRejectRejectParams{
		HTTPClient: client,
	}
}

/*SupplierInvoiceRejectRejectParams contains all the parameters to send to the API endpoint
for the supplier invoice reject reject operation typically these are written to a http.Request
*/
type SupplierInvoiceRejectRejectParams struct {

	/*Comment*/
	Comment string
	/*InvoiceID
	  Invoice ID.

	*/
	InvoiceID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) WithTimeout(timeout time.Duration) *SupplierInvoiceRejectRejectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) WithContext(ctx context.Context) *SupplierInvoiceRejectRejectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) WithHTTPClient(client *http.Client) *SupplierInvoiceRejectRejectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComment adds the comment to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) WithComment(comment string) *SupplierInvoiceRejectRejectParams {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) SetComment(comment string) {
	o.Comment = comment
}

// WithInvoiceID adds the invoiceID to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) WithInvoiceID(invoiceID int32) *SupplierInvoiceRejectRejectParams {
	o.SetInvoiceID(invoiceID)
	return o
}

// SetInvoiceID adds the invoiceId to the supplier invoice reject reject params
func (o *SupplierInvoiceRejectRejectParams) SetInvoiceID(invoiceID int32) {
	o.InvoiceID = invoiceID
}

// WriteToRequest writes these params to a swagger request
func (o *SupplierInvoiceRejectRejectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param comment
	qrComment := o.Comment
	qComment := qrComment
	if qComment != "" {
		if err := r.SetQueryParam("comment", qComment); err != nil {
			return err
		}
	}

	// path param invoiceId
	if err := r.SetPathParam("invoiceId", swag.FormatInt32(o.InvoiceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
