// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BankOnboardingStepDTO bank onboarding step d t o
//
// swagger:model BankOnboardingStepDTO
type BankOnboardingStepDTO struct {

	// accessible
	Accessible *bool `json:"accessible,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// state
	// Enum: [INCOMPLETE COMPLETED PROCESSING]
	State string `json:"state,omitempty"`
}

// Validate validates this bank onboarding step d t o
func (m *BankOnboardingStepDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var bankOnboardingStepDTOTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INCOMPLETE","COMPLETED","PROCESSING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bankOnboardingStepDTOTypeStatePropEnum = append(bankOnboardingStepDTOTypeStatePropEnum, v)
	}
}

const (

	// BankOnboardingStepDTOStateINCOMPLETE captures enum value "INCOMPLETE"
	BankOnboardingStepDTOStateINCOMPLETE string = "INCOMPLETE"

	// BankOnboardingStepDTOStateCOMPLETED captures enum value "COMPLETED"
	BankOnboardingStepDTOStateCOMPLETED string = "COMPLETED"

	// BankOnboardingStepDTOStatePROCESSING captures enum value "PROCESSING"
	BankOnboardingStepDTOStatePROCESSING string = "PROCESSING"
)

// prop value enum
func (m *BankOnboardingStepDTO) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, bankOnboardingStepDTOTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *BankOnboardingStepDTO) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BankOnboardingStepDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BankOnboardingStepDTO) UnmarshalBinary(b []byte) error {
	var res BankOnboardingStepDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
