// Code generated by go-swagger; DO NOT EDIT.

package details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new details API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for details API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	EmployeeEmploymentDetailsGet(params *EmployeeEmploymentDetailsGetParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsGetOK, error)

	EmployeeEmploymentDetailsPost(params *EmployeeEmploymentDetailsPostParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsPostCreated, error)

	EmployeeEmploymentDetailsPut(params *EmployeeEmploymentDetailsPutParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsPutOK, error)

	EmployeeEmploymentDetailsSearch(params *EmployeeEmploymentDetailsSearchParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsSearchOK, error)

	InvoiceDetailsGet(params *InvoiceDetailsGetParams, authInfo runtime.ClientAuthInfoWriter) (*InvoiceDetailsGetOK, error)

	InvoiceDetailsSearch(params *InvoiceDetailsSearchParams, authInfo runtime.ClientAuthInfoWriter) (*InvoiceDetailsSearchOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  EmployeeEmploymentDetailsGet bs e t a find employment details by ID
*/
func (a *Client) EmployeeEmploymentDetailsGet(params *EmployeeEmploymentDetailsGetParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewEmployeeEmploymentDetailsGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "EmployeeEmploymentDetailsGet",
		Method:             "GET",
		PathPattern:        "/employee/employment/details/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &EmployeeEmploymentDetailsGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*EmployeeEmploymentDetailsGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for EmployeeEmploymentDetailsGet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  EmployeeEmploymentDetailsPost bs e t a create employment details
*/
func (a *Client) EmployeeEmploymentDetailsPost(params *EmployeeEmploymentDetailsPostParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsPostCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewEmployeeEmploymentDetailsPostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "EmployeeEmploymentDetailsPost",
		Method:             "POST",
		PathPattern:        "/employee/employment/details",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json; charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &EmployeeEmploymentDetailsPostReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*EmployeeEmploymentDetailsPostCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for EmployeeEmploymentDetailsPost: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  EmployeeEmploymentDetailsPut bs e t a update employment details
*/
func (a *Client) EmployeeEmploymentDetailsPut(params *EmployeeEmploymentDetailsPutParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsPutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewEmployeeEmploymentDetailsPutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "EmployeeEmploymentDetailsPut",
		Method:             "PUT",
		PathPattern:        "/employee/employment/details/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json; charset=utf-8"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &EmployeeEmploymentDetailsPutReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*EmployeeEmploymentDetailsPutOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for EmployeeEmploymentDetailsPut: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  EmployeeEmploymentDetailsSearch bs e t a find all employmentdetails for employment
*/
func (a *Client) EmployeeEmploymentDetailsSearch(params *EmployeeEmploymentDetailsSearchParams, authInfo runtime.ClientAuthInfoWriter) (*EmployeeEmploymentDetailsSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewEmployeeEmploymentDetailsSearchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "EmployeeEmploymentDetailsSearch",
		Method:             "GET",
		PathPattern:        "/employee/employment/details",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &EmployeeEmploymentDetailsSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*EmployeeEmploymentDetailsSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for EmployeeEmploymentDetailsSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoiceDetailsGet gets project invoice details by ID
*/
func (a *Client) InvoiceDetailsGet(params *InvoiceDetailsGetParams, authInfo runtime.ClientAuthInfoWriter) (*InvoiceDetailsGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoiceDetailsGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InvoiceDetailsGet",
		Method:             "GET",
		PathPattern:        "/invoice/details/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoiceDetailsGetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoiceDetailsGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InvoiceDetailsGet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InvoiceDetailsSearch finds project invoice details corresponding with sent data
*/
func (a *Client) InvoiceDetailsSearch(params *InvoiceDetailsSearchParams, authInfo runtime.ClientAuthInfoWriter) (*InvoiceDetailsSearchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInvoiceDetailsSearchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "InvoiceDetailsSearch",
		Method:             "GET",
		PathPattern:        "/invoice/details",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InvoiceDetailsSearchReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InvoiceDetailsSearchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for InvoiceDetailsSearch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
