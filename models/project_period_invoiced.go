// Copyright 2020 Bjerk AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectPeriodInvoiced project period invoiced
//
// swagger:model ProjectPeriodInvoiced
type ProjectPeriodInvoiced struct {

	// sum amount
	// Read Only: true
	SumAmount float64 `json:"sumAmount,omitempty"`

	// sum amount due
	// Read Only: true
	SumAmountDue float64 `json:"sumAmountDue,omitempty"`

	// sum amount due outstanding
	// Read Only: true
	SumAmountDueOutstanding float64 `json:"sumAmountDueOutstanding,omitempty"`

	// sum amount outstanding
	// Read Only: true
	SumAmountOutstanding float64 `json:"sumAmountOutstanding,omitempty"`

	// sum amount paid
	// Read Only: true
	SumAmountPaid float64 `json:"sumAmountPaid,omitempty"`
}

// Validate validates this project period invoiced
func (m *ProjectPeriodInvoiced) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProjectPeriodInvoiced) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProjectPeriodInvoiced) UnmarshalBinary(b []byte) error {
	var res ProjectPeriodInvoiced
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
