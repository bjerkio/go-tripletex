// Copyright 2020 Bjerk AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Modules modules
//
// swagger:model Modules
type Modules struct {

	// Not readable. Only for input.
	Accounting *bool `json:"accounting,omitempty"`

	// agro
	Agro *bool `json:"agro,omitempty"`

	// Only readable for now
	// Read Only: true
	ApproveVoucher *bool `json:"approveVoucher,omitempty"`

	// Not readable. Only for input.
	Electro *bool `json:"electro,omitempty"`

	// Not readable. Only for input.
	ElectronicVouchers *bool `json:"electronicVouchers,omitempty"`

	// Not readable. Only for input.
	Invoice *bool `json:"invoice,omitempty"`

	// mamut
	Mamut *bool `json:"mamut,omitempty"`

	// ocr
	Ocr *bool `json:"ocr,omitempty"`

	// Not readable. Only for input.
	Project *bool `json:"project,omitempty"`

	// remit
	Remit *bool `json:"remit,omitempty"`

	// Not readable. Only for input.
	Salary *bool `json:"salary,omitempty"`

	// salary start date
	// Format: date
	SalaryStartDate strfmt.Date `json:"salaryStartDate,omitempty"`

	// Not readable. Only for input.
	Vvs *bool `json:"vvs,omitempty"`
}

// Validate validates this modules
func (m *Modules) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSalaryStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Modules) validateSalaryStartDate(formats strfmt.Registry) error {

	if swag.IsZero(m.SalaryStartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("salaryStartDate", "body", "date", m.SalaryStartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Modules) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Modules) UnmarshalBinary(b []byte) error {
	var res Modules
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
