// Copyright 2020 Bjerk AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CompanyAutoCompleteDTO company auto complete d t o
//
// swagger:model CompanyAutoCompleteDTO
type CompanyAutoCompleteDTO struct {

	// address
	Address string `json:"address,omitempty"`

	// alternate name
	AlternateName string `json:"alternateName,omitempty"`

	// company code
	CompanyCode string `json:"companyCode,omitempty"`

	// company type
	CompanyType int32 `json:"companyType,omitempty"`

	// country Id
	CountryID int32 `json:"countryId,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// latitude
	Latitude float64 `json:"latitude,omitempty"`

	// longitude
	Longitude float64 `json:"longitude,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// phone number
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// phone number mobile
	PhoneNumberMobile string `json:"phoneNumberMobile,omitempty"`

	// postal area
	PostalArea string `json:"postalArea,omitempty"`

	// postal code
	PostalCode string `json:"postalCode,omitempty"`

	// score
	Score int32 `json:"score,omitempty"`

	// sources
	Sources []string `json:"sources"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this company auto complete d t o
func (m *CompanyAutoCompleteDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var companyAutoCompleteDTOSourcesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SEARCH1881","TRIPLETEX","NICKNAME","EMPLOYEE","CONTACT","ACTIVITY","PROJECT","ORDER","OFFER","CUSTOMER","COMPANY","CONTROLSCHEMA","HOUR","TRAVELEXPENSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		companyAutoCompleteDTOSourcesItemsEnum = append(companyAutoCompleteDTOSourcesItemsEnum, v)
	}
}

func (m *CompanyAutoCompleteDTO) validateSourcesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, companyAutoCompleteDTOSourcesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CompanyAutoCompleteDTO) validateSources(formats strfmt.Registry) error {

	if swag.IsZero(m.Sources) { // not required
		return nil
	}

	for i := 0; i < len(m.Sources); i++ {

		// value enum
		if err := m.validateSourcesItemsEnum("sources"+"."+strconv.Itoa(i), "body", m.Sources[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CompanyAutoCompleteDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CompanyAutoCompleteDTO) UnmarshalBinary(b []byte) error {
	var res CompanyAutoCompleteDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
