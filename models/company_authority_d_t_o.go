// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CompanyAuthorityDTO company authority d t o
//
// swagger:model CompanyAuthorityDTO
type CompanyAuthorityDTO struct {

	// has company authority
	// Enum: [DENIED MANUAL_CHECK ACCEPTED]
	HasCompanyAuthority string `json:"hasCompanyAuthority,omitempty"`
}

// Validate validates this company authority d t o
func (m *CompanyAuthorityDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHasCompanyAuthority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var companyAuthorityDTOTypeHasCompanyAuthorityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DENIED","MANUAL_CHECK","ACCEPTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		companyAuthorityDTOTypeHasCompanyAuthorityPropEnum = append(companyAuthorityDTOTypeHasCompanyAuthorityPropEnum, v)
	}
}

const (

	// CompanyAuthorityDTOHasCompanyAuthorityDENIED captures enum value "DENIED"
	CompanyAuthorityDTOHasCompanyAuthorityDENIED string = "DENIED"

	// CompanyAuthorityDTOHasCompanyAuthorityMANUALCHECK captures enum value "MANUAL_CHECK"
	CompanyAuthorityDTOHasCompanyAuthorityMANUALCHECK string = "MANUAL_CHECK"

	// CompanyAuthorityDTOHasCompanyAuthorityACCEPTED captures enum value "ACCEPTED"
	CompanyAuthorityDTOHasCompanyAuthorityACCEPTED string = "ACCEPTED"
)

// prop value enum
func (m *CompanyAuthorityDTO) validateHasCompanyAuthorityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, companyAuthorityDTOTypeHasCompanyAuthorityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CompanyAuthorityDTO) validateHasCompanyAuthority(formats strfmt.Registry) error {

	if swag.IsZero(m.HasCompanyAuthority) { // not required
		return nil
	}

	// value enum
	if err := m.validateHasCompanyAuthorityEnum("hasCompanyAuthority", "body", m.HasCompanyAuthority); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CompanyAuthorityDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CompanyAuthorityDTO) UnmarshalBinary(b []byte) error {
	var res CompanyAuthorityDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
