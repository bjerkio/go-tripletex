// Code generated by go-swagger; DO NOT EDIT.

package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/tripletex-go/models"
)

// NewProductUnitListPutListParams creates a new ProductUnitListPutListParams object
// with the default values initialized.
func NewProductUnitListPutListParams() *ProductUnitListPutListParams {
	var ()
	return &ProductUnitListPutListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProductUnitListPutListParamsWithTimeout creates a new ProductUnitListPutListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProductUnitListPutListParamsWithTimeout(timeout time.Duration) *ProductUnitListPutListParams {
	var ()
	return &ProductUnitListPutListParams{

		timeout: timeout,
	}
}

// NewProductUnitListPutListParamsWithContext creates a new ProductUnitListPutListParams object
// with the default values initialized, and the ability to set a context for a request
func NewProductUnitListPutListParamsWithContext(ctx context.Context) *ProductUnitListPutListParams {
	var ()
	return &ProductUnitListPutListParams{

		Context: ctx,
	}
}

// NewProductUnitListPutListParamsWithHTTPClient creates a new ProductUnitListPutListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProductUnitListPutListParamsWithHTTPClient(client *http.Client) *ProductUnitListPutListParams {
	var ()
	return &ProductUnitListPutListParams{
		HTTPClient: client,
	}
}

/*ProductUnitListPutListParams contains all the parameters to send to the API endpoint
for the product unit list put list operation typically these are written to a http.Request
*/
type ProductUnitListPutListParams struct {

	/*Body
	  JSON representing updates to object. Should have ID and version set.

	*/
	Body []*models.ProductUnit

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the product unit list put list params
func (o *ProductUnitListPutListParams) WithTimeout(timeout time.Duration) *ProductUnitListPutListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the product unit list put list params
func (o *ProductUnitListPutListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the product unit list put list params
func (o *ProductUnitListPutListParams) WithContext(ctx context.Context) *ProductUnitListPutListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the product unit list put list params
func (o *ProductUnitListPutListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the product unit list put list params
func (o *ProductUnitListPutListParams) WithHTTPClient(client *http.Client) *ProductUnitListPutListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the product unit list put list params
func (o *ProductUnitListPutListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the product unit list put list params
func (o *ProductUnitListPutListParams) WithBody(body []*models.ProductUnit) *ProductUnitListPutListParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the product unit list put list params
func (o *ProductUnitListPutListParams) SetBody(body []*models.ProductUnit) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ProductUnitListPutListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
