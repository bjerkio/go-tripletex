// Code generated by go-swagger; DO NOT EDIT.

package supplier_invoice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSupplierInvoiceApproveApproveManyParams creates a new SupplierInvoiceApproveApproveManyParams object
// with the default values initialized.
func NewSupplierInvoiceApproveApproveManyParams() *SupplierInvoiceApproveApproveManyParams {
	var ()
	return &SupplierInvoiceApproveApproveManyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSupplierInvoiceApproveApproveManyParamsWithTimeout creates a new SupplierInvoiceApproveApproveManyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSupplierInvoiceApproveApproveManyParamsWithTimeout(timeout time.Duration) *SupplierInvoiceApproveApproveManyParams {
	var ()
	return &SupplierInvoiceApproveApproveManyParams{

		timeout: timeout,
	}
}

// NewSupplierInvoiceApproveApproveManyParamsWithContext creates a new SupplierInvoiceApproveApproveManyParams object
// with the default values initialized, and the ability to set a context for a request
func NewSupplierInvoiceApproveApproveManyParamsWithContext(ctx context.Context) *SupplierInvoiceApproveApproveManyParams {
	var ()
	return &SupplierInvoiceApproveApproveManyParams{

		Context: ctx,
	}
}

// NewSupplierInvoiceApproveApproveManyParamsWithHTTPClient creates a new SupplierInvoiceApproveApproveManyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSupplierInvoiceApproveApproveManyParamsWithHTTPClient(client *http.Client) *SupplierInvoiceApproveApproveManyParams {
	var ()
	return &SupplierInvoiceApproveApproveManyParams{
		HTTPClient: client,
	}
}

/*SupplierInvoiceApproveApproveManyParams contains all the parameters to send to the API endpoint
for the supplier invoice approve approve many operation typically these are written to a http.Request
*/
type SupplierInvoiceApproveApproveManyParams struct {

	/*Comment
	  comment

	*/
	Comment *string
	/*InvoiceIds
	  ID of the elements

	*/
	InvoiceIds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) WithTimeout(timeout time.Duration) *SupplierInvoiceApproveApproveManyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) WithContext(ctx context.Context) *SupplierInvoiceApproveApproveManyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) WithHTTPClient(client *http.Client) *SupplierInvoiceApproveApproveManyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComment adds the comment to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) WithComment(comment *string) *SupplierInvoiceApproveApproveManyParams {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) SetComment(comment *string) {
	o.Comment = comment
}

// WithInvoiceIds adds the invoiceIds to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) WithInvoiceIds(invoiceIds *string) *SupplierInvoiceApproveApproveManyParams {
	o.SetInvoiceIds(invoiceIds)
	return o
}

// SetInvoiceIds adds the invoiceIds to the supplier invoice approve approve many params
func (o *SupplierInvoiceApproveApproveManyParams) SetInvoiceIds(invoiceIds *string) {
	o.InvoiceIds = invoiceIds
}

// WriteToRequest writes these params to a swagger request
func (o *SupplierInvoiceApproveApproveManyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Comment != nil {

		// query param comment
		var qrComment string
		if o.Comment != nil {
			qrComment = *o.Comment
		}
		qComment := qrComment
		if qComment != "" {
			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}

	}

	if o.InvoiceIds != nil {

		// query param invoiceIds
		var qrInvoiceIds string
		if o.InvoiceIds != nil {
			qrInvoiceIds = *o.InvoiceIds
		}
		qInvoiceIds := qrInvoiceIds
		if qInvoiceIds != "" {
			if err := r.SetQueryParam("invoiceIds", qInvoiceIds); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
