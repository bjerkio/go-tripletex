// Code generated by go-swagger; DO NOT EDIT.

package voucher

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLedgerVoucherReverseReverseParams creates a new LedgerVoucherReverseReverseParams object
// with the default values initialized.
func NewLedgerVoucherReverseReverseParams() *LedgerVoucherReverseReverseParams {
	var ()
	return &LedgerVoucherReverseReverseParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewLedgerVoucherReverseReverseParamsWithTimeout creates a new LedgerVoucherReverseReverseParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLedgerVoucherReverseReverseParamsWithTimeout(timeout time.Duration) *LedgerVoucherReverseReverseParams {
	var ()
	return &LedgerVoucherReverseReverseParams{

		timeout: timeout,
	}
}

// NewLedgerVoucherReverseReverseParamsWithContext creates a new LedgerVoucherReverseReverseParams object
// with the default values initialized, and the ability to set a context for a request
func NewLedgerVoucherReverseReverseParamsWithContext(ctx context.Context) *LedgerVoucherReverseReverseParams {
	var ()
	return &LedgerVoucherReverseReverseParams{

		Context: ctx,
	}
}

// NewLedgerVoucherReverseReverseParamsWithHTTPClient creates a new LedgerVoucherReverseReverseParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLedgerVoucherReverseReverseParamsWithHTTPClient(client *http.Client) *LedgerVoucherReverseReverseParams {
	var ()
	return &LedgerVoucherReverseReverseParams{
		HTTPClient: client,
	}
}

/*LedgerVoucherReverseReverseParams contains all the parameters to send to the API endpoint
for the ledger voucher reverse reverse operation typically these are written to a http.Request
*/
type LedgerVoucherReverseReverseParams struct {

	/*Date
	  Reverse voucher date

	*/
	Date string
	/*ID
	  ID of voucher that should be reversed.

	*/
	ID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) WithTimeout(timeout time.Duration) *LedgerVoucherReverseReverseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) WithContext(ctx context.Context) *LedgerVoucherReverseReverseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) WithHTTPClient(client *http.Client) *LedgerVoucherReverseReverseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDate adds the date to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) WithDate(date string) *LedgerVoucherReverseReverseParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) SetDate(date string) {
	o.Date = date
}

// WithID adds the id to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) WithID(id int32) *LedgerVoucherReverseReverseParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the ledger voucher reverse reverse params
func (o *LedgerVoucherReverseReverseParams) SetID(id int32) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *LedgerVoucherReverseReverseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param date
	qrDate := o.Date
	qDate := qrDate
	if qDate != "" {
		if err := r.SetQueryParam("date", qDate); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
