// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VNTCStatusDTO v n t c status d t o
//
// swagger:model VNTCStatusDTO
type VNTCStatusDTO struct {

	// external message Id
	// Required: true
	// Read Only: true
	ExternalMessageID string `json:"ExternalMessageId"`

	// external sender Id
	// Required: true
	// Read Only: true
	ExternalSenderID string `json:"ExternalSenderId"`

	// message Id
	// Required: true
	// Read Only: true
	// Format: uuid
	MessageID strfmt.UUID `json:"MessageId"`

	// operator
	// Required: true
	// Read Only: true
	Operator string `json:"Operator"`

	// part count
	// Read Only: true
	PartCount int32 `json:"PartCount,omitempty"`

	// status
	// Required: true
	// Read Only: true
	Status string `json:"Status"`
}

// Validate validates this v n t c status d t o
func (m *VNTCStatusDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExternalMessageID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExternalSenderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMessageID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VNTCStatusDTO) validateExternalMessageID(formats strfmt.Registry) error {

	if err := validate.RequiredString("ExternalMessageId", "body", string(m.ExternalMessageID)); err != nil {
		return err
	}

	return nil
}

func (m *VNTCStatusDTO) validateExternalSenderID(formats strfmt.Registry) error {

	if err := validate.RequiredString("ExternalSenderId", "body", string(m.ExternalSenderID)); err != nil {
		return err
	}

	return nil
}

func (m *VNTCStatusDTO) validateMessageID(formats strfmt.Registry) error {

	if err := validate.Required("MessageId", "body", strfmt.UUID(m.MessageID)); err != nil {
		return err
	}

	if err := validate.FormatOf("MessageId", "body", "uuid", m.MessageID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *VNTCStatusDTO) validateOperator(formats strfmt.Registry) error {

	if err := validate.RequiredString("Operator", "body", string(m.Operator)); err != nil {
		return err
	}

	return nil
}

func (m *VNTCStatusDTO) validateStatus(formats strfmt.Registry) error {

	if err := validate.RequiredString("Status", "body", string(m.Status)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VNTCStatusDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VNTCStatusDTO) UnmarshalBinary(b []byte) error {
	var res VNTCStatusDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
