// Code generated by go-swagger; DO NOT EDIT.

package travel_expense

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTravelExpenseAttachmentUploadAttachmentParams creates a new TravelExpenseAttachmentUploadAttachmentParams object
// with the default values initialized.
func NewTravelExpenseAttachmentUploadAttachmentParams() *TravelExpenseAttachmentUploadAttachmentParams {
	var (
		createNewCostDefault = bool(false)
	)
	return &TravelExpenseAttachmentUploadAttachmentParams{
		CreateNewCost: &createNewCostDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewTravelExpenseAttachmentUploadAttachmentParamsWithTimeout creates a new TravelExpenseAttachmentUploadAttachmentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTravelExpenseAttachmentUploadAttachmentParamsWithTimeout(timeout time.Duration) *TravelExpenseAttachmentUploadAttachmentParams {
	var (
		createNewCostDefault = bool(false)
	)
	return &TravelExpenseAttachmentUploadAttachmentParams{
		CreateNewCost: &createNewCostDefault,

		timeout: timeout,
	}
}

// NewTravelExpenseAttachmentUploadAttachmentParamsWithContext creates a new TravelExpenseAttachmentUploadAttachmentParams object
// with the default values initialized, and the ability to set a context for a request
func NewTravelExpenseAttachmentUploadAttachmentParamsWithContext(ctx context.Context) *TravelExpenseAttachmentUploadAttachmentParams {
	var (
		createNewCostDefault = bool(false)
	)
	return &TravelExpenseAttachmentUploadAttachmentParams{
		CreateNewCost: &createNewCostDefault,

		Context: ctx,
	}
}

// NewTravelExpenseAttachmentUploadAttachmentParamsWithHTTPClient creates a new TravelExpenseAttachmentUploadAttachmentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTravelExpenseAttachmentUploadAttachmentParamsWithHTTPClient(client *http.Client) *TravelExpenseAttachmentUploadAttachmentParams {
	var (
		createNewCostDefault = bool(false)
	)
	return &TravelExpenseAttachmentUploadAttachmentParams{
		CreateNewCost: &createNewCostDefault,
		HTTPClient:    client,
	}
}

/*TravelExpenseAttachmentUploadAttachmentParams contains all the parameters to send to the API endpoint
for the travel expense attachment upload attachment operation typically these are written to a http.Request
*/
type TravelExpenseAttachmentUploadAttachmentParams struct {

	/*CreateNewCost
	  Create new cost row when you add the attachment

	*/
	CreateNewCost *bool
	/*File
	  The file

	*/
	File runtime.NamedReadCloser
	/*TravelExpenseID
	  Travel Expense ID to upload attachment to.

	*/
	TravelExpenseID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithTimeout(timeout time.Duration) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithContext(ctx context.Context) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithHTTPClient(client *http.Client) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateNewCost adds the createNewCost to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithCreateNewCost(createNewCost *bool) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetCreateNewCost(createNewCost)
	return o
}

// SetCreateNewCost adds the createNewCost to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetCreateNewCost(createNewCost *bool) {
	o.CreateNewCost = createNewCost
}

// WithFile adds the file to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithFile(file runtime.NamedReadCloser) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithTravelExpenseID adds the travelExpenseID to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) WithTravelExpenseID(travelExpenseID int32) *TravelExpenseAttachmentUploadAttachmentParams {
	o.SetTravelExpenseID(travelExpenseID)
	return o
}

// SetTravelExpenseID adds the travelExpenseId to the travel expense attachment upload attachment params
func (o *TravelExpenseAttachmentUploadAttachmentParams) SetTravelExpenseID(travelExpenseID int32) {
	o.TravelExpenseID = travelExpenseID
}

// WriteToRequest writes these params to a swagger request
func (o *TravelExpenseAttachmentUploadAttachmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CreateNewCost != nil {

		// query param createNewCost
		var qrCreateNewCost bool
		if o.CreateNewCost != nil {
			qrCreateNewCost = *o.CreateNewCost
		}
		qCreateNewCost := swag.FormatBool(qrCreateNewCost)
		if qCreateNewCost != "" {
			if err := r.SetQueryParam("createNewCost", qCreateNewCost); err != nil {
				return err
			}
		}

	}

	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	// path param travelExpenseId
	if err := r.SetPathParam("travelExpenseId", swag.FormatInt32(o.TravelExpenseID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
