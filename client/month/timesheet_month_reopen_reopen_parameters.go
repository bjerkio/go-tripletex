// Code generated by go-swagger; DO NOT EDIT.

package month

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTimesheetMonthReopenReopenParams creates a new TimesheetMonthReopenReopenParams object
// with the default values initialized.
func NewTimesheetMonthReopenReopenParams() *TimesheetMonthReopenReopenParams {
	var ()
	return &TimesheetMonthReopenReopenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTimesheetMonthReopenReopenParamsWithTimeout creates a new TimesheetMonthReopenReopenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTimesheetMonthReopenReopenParamsWithTimeout(timeout time.Duration) *TimesheetMonthReopenReopenParams {
	var ()
	return &TimesheetMonthReopenReopenParams{

		timeout: timeout,
	}
}

// NewTimesheetMonthReopenReopenParamsWithContext creates a new TimesheetMonthReopenReopenParams object
// with the default values initialized, and the ability to set a context for a request
func NewTimesheetMonthReopenReopenParamsWithContext(ctx context.Context) *TimesheetMonthReopenReopenParams {
	var ()
	return &TimesheetMonthReopenReopenParams{

		Context: ctx,
	}
}

// NewTimesheetMonthReopenReopenParamsWithHTTPClient creates a new TimesheetMonthReopenReopenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTimesheetMonthReopenReopenParamsWithHTTPClient(client *http.Client) *TimesheetMonthReopenReopenParams {
	var ()
	return &TimesheetMonthReopenReopenParams{
		HTTPClient: client,
	}
}

/*TimesheetMonthReopenReopenParams contains all the parameters to send to the API endpoint
for the timesheet month reopen reopen operation typically these are written to a http.Request
*/
type TimesheetMonthReopenReopenParams struct {

	/*EmployeeIds
	  List of IDs. Defaults to ID of token owner.

	*/
	EmployeeIds *string
	/*ID
	  Element ID

	*/
	ID *int32
	/*MonthYear
	  2020-01

	*/
	MonthYear *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithTimeout(timeout time.Duration) *TimesheetMonthReopenReopenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithContext(ctx context.Context) *TimesheetMonthReopenReopenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithHTTPClient(client *http.Client) *TimesheetMonthReopenReopenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmployeeIds adds the employeeIds to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithEmployeeIds(employeeIds *string) *TimesheetMonthReopenReopenParams {
	o.SetEmployeeIds(employeeIds)
	return o
}

// SetEmployeeIds adds the employeeIds to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetEmployeeIds(employeeIds *string) {
	o.EmployeeIds = employeeIds
}

// WithID adds the id to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithID(id *int32) *TimesheetMonthReopenReopenParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetID(id *int32) {
	o.ID = id
}

// WithMonthYear adds the monthYear to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) WithMonthYear(monthYear *string) *TimesheetMonthReopenReopenParams {
	o.SetMonthYear(monthYear)
	return o
}

// SetMonthYear adds the monthYear to the timesheet month reopen reopen params
func (o *TimesheetMonthReopenReopenParams) SetMonthYear(monthYear *string) {
	o.MonthYear = monthYear
}

// WriteToRequest writes these params to a swagger request
func (o *TimesheetMonthReopenReopenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EmployeeIds != nil {

		// query param employeeIds
		var qrEmployeeIds string
		if o.EmployeeIds != nil {
			qrEmployeeIds = *o.EmployeeIds
		}
		qEmployeeIds := qrEmployeeIds
		if qEmployeeIds != "" {
			if err := r.SetQueryParam("employeeIds", qEmployeeIds); err != nil {
				return err
			}
		}

	}

	if o.ID != nil {

		// query param id
		var qrID int32
		if o.ID != nil {
			qrID = *o.ID
		}
		qID := swag.FormatInt32(qrID)
		if qID != "" {
			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}

	}

	if o.MonthYear != nil {

		// query param monthYear
		var qrMonthYear string
		if o.MonthYear != nil {
			qrMonthYear = *o.MonthYear
		}
		qMonthYear := qrMonthYear
		if qMonthYear != "" {
			if err := r.SetQueryParam("monthYear", qMonthYear); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
